// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ismsapi.Data;

namespace ismsapi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ismsapi.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("NameFirst");

                    b.Property<string>("NameLast");

                    b.Property<string>("NameMiddle");

                    b.Property<string>("Password");

                    b.Property<int>("RoleGroupId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("RoleGroupId");

                    b.ToTable("UserAdmins");
                });

            modelBuilder.Entity("ismsapi.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber");

                    b.Property<string>("BankName");

                    b.Property<int>("TutionDebt");

                    b.Property<int>("TutionStatus");

                    b.Property<int?>("TutionStatusNavigationId");

                    b.HasKey("Id");

                    b.HasIndex("TutionStatusNavigationId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("ismsapi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ismsapi.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("DateSend");

                    b.Property<string>("Email");

                    b.Property<string>("NameFirst");

                    b.Property<string>("NameLast");

                    b.Property<string>("NameMiddle");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ismsapi.Models.EducateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("EducateTypes");
                });

            modelBuilder.Entity("ismsapi.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime?>("DateEnd");

                    b.Property<DateTime?>("DateStart");

                    b.Property<int>("EventStatusId");

                    b.Property<string>("Name");

                    b.Property<string>("Thumbnail");

                    b.HasKey("Id");

                    b.HasIndex("EventStatusId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ismsapi.Models.EventBooking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<int>("EventId");

                    b.Property<string>("NameFirst");

                    b.Property<string>("NameLast");

                    b.Property<string>("NameMiddle");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventBookings");
                });

            modelBuilder.Entity("ismsapi.Models.EventStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("EventStatuses");
                });

            modelBuilder.Entity("ismsapi.Models.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("ismsapi.Models.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressApartment");

                    b.Property<string>("AddressCity");

                    b.Property<string>("AddressCountry");

                    b.Property<string>("AddressDistrict");

                    b.Property<string>("AddressStreet");

                    b.Property<string>("Avatar");

                    b.Property<DateTime?>("DateEnd");

                    b.Property<DateTime?>("DateGraduate");

                    b.Property<DateTime?>("DateStart");

                    b.Property<int>("EducateTypeId");

                    b.Property<string>("Email");

                    b.Property<int>("FacultyId");

                    b.Property<int>("MajorLecturerId");

                    b.Property<string>("NameFirst");

                    b.Property<string>("NameLast");

                    b.Property<string>("NameMiddle");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("RoleGroupId");

                    b.Property<int>("StudyStatusId");

                    b.Property<int>("StudyTypeId");

                    b.HasKey("Id");

                    b.HasIndex("EducateTypeId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("MajorLecturerId");

                    b.HasIndex("RoleGroupId");

                    b.HasIndex("StudyStatusId");

                    b.HasIndex("StudyTypeId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("ismsapi.Models.MajorLecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Faculty");

                    b.Property<string>("Major");

                    b.Property<string>("ShortCode");

                    b.Property<string>("University");

                    b.HasKey("Id");

                    b.ToTable("MajorLectures");
                });

            modelBuilder.Entity("ismsapi.Models.MajorStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FacultyId");

                    b.Property<string>("Major");

                    b.Property<string>("ShortCode");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("MajorStudents");
                });

            modelBuilder.Entity("ismsapi.Models.Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreate");

                    b.Property<DateTime?>("DateModify");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("ismsapi.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Content");

                    b.Property<DateTime?>("DateCreate");

                    b.Property<DateTime?>("DateModify");

                    b.Property<int>("PostStatusId");

                    b.Property<string>("Thumbnail");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PostStatusId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("ismsapi.Models.PostStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("PostStatuses");
                });

            modelBuilder.Entity("ismsapi.Models.RoleAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Description");

                    b.Property<string>("ShortCode");

                    b.HasKey("Id");

                    b.ToTable("RoleActions");
                });

            modelBuilder.Entity("ismsapi.Models.RoleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Allow");

                    b.Property<int>("RoleActionId");

                    b.Property<int>("RoleGroupId");

                    b.HasKey("Id");

                    b.HasIndex("RoleActionId");

                    b.HasIndex("RoleGroupId");

                    b.ToTable("RoleDetails");
                });

            modelBuilder.Entity("ismsapi.Models.RoleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("RoleGroups");
                });

            modelBuilder.Entity("ismsapi.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressApartment");

                    b.Property<string>("AddressCity");

                    b.Property<string>("AddressDistrict");

                    b.Property<string>("AddressStreet");

                    b.Property<string>("Avatar");

                    b.Property<int>("BankAccountId");

                    b.Property<DateTime?>("DateEnd");

                    b.Property<DateTime?>("DateGraduate");

                    b.Property<DateTime?>("DateStart");

                    b.Property<int>("EducateTypeId");

                    b.Property<string>("Email");

                    b.Property<int>("FacultyId");

                    b.Property<int>("MajorStudentId");

                    b.Property<string>("NameFirst");

                    b.Property<string>("NameLast");

                    b.Property<string>("NameMiddle");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<int>("RoleGroupId");

                    b.Property<string>("StudentCode");

                    b.Property<int>("StudyStatusId");

                    b.Property<int>("StudyTypeId");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("EducateTypeId");

                    b.HasIndex("FacultyId");

                    b.HasIndex("MajorStudentId");

                    b.HasIndex("RoleGroupId");

                    b.HasIndex("StudyStatusId");

                    b.HasIndex("StudyTypeId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ismsapi.Models.StudyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("StudyStatuses");
                });

            modelBuilder.Entity("ismsapi.Models.StudyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("StudyTypes");
                });

            modelBuilder.Entity("ismsapi.Models.TutionStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("TutionStatuses");
                });

            modelBuilder.Entity("ismsapi.Models.Admin", b =>
                {
                    b.HasOne("ismsapi.Models.RoleGroup", "RoleGroup")
                        .WithMany("Admin")
                        .HasForeignKey("RoleGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ismsapi.Models.BankAccount", b =>
                {
                    b.HasOne("ismsapi.Models.TutionStatus", "TutionStatusNavigation")
                        .WithMany("BankAccount")
                        .HasForeignKey("TutionStatusNavigationId");
                });

            modelBuilder.Entity("ismsapi.Models.Event", b =>
                {
                    b.HasOne("ismsapi.Models.EventStatus", "EventStatus")
                        .WithMany("Event")
                        .HasForeignKey("EventStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ismsapi.Models.EventBooking", b =>
                {
                    b.HasOne("ismsapi.Models.Event", "Event")
                        .WithMany("EventBooking")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ismsapi.Models.Lecturer", b =>
                {
                    b.HasOne("ismsapi.Models.EducateType", "EducateType")
                        .WithMany("Lecturer")
                        .HasForeignKey("EducateTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.Faculty", "Faculty")
                        .WithMany("Lecturer")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.MajorLecturer", "MajorLecturer")
                        .WithMany("Lecturer")
                        .HasForeignKey("MajorLecturerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.RoleGroup", "RoleGroup")
                        .WithMany("Lecturer")
                        .HasForeignKey("RoleGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.StudyStatus", "StudyStatus")
                        .WithMany("Lecturer")
                        .HasForeignKey("StudyStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.StudyType", "StudyType")
                        .WithMany("Lecturer")
                        .HasForeignKey("StudyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ismsapi.Models.MajorStudent", b =>
                {
                    b.HasOne("ismsapi.Models.Faculty", "Faculty")
                        .WithMany("MajorStudent")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ismsapi.Models.Post", b =>
                {
                    b.HasOne("ismsapi.Models.Admin", "Admin")
                        .WithMany("Post")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.Category", "Category")
                        .WithMany("Post")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.PostStatus", "PostStatus")
                        .WithMany("Post")
                        .HasForeignKey("PostStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ismsapi.Models.RoleDetail", b =>
                {
                    b.HasOne("ismsapi.Models.RoleAction", "RoleAction")
                        .WithMany("RoleDetail")
                        .HasForeignKey("RoleActionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.RoleGroup", "RoleGroup")
                        .WithMany("RoleDetail")
                        .HasForeignKey("RoleGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ismsapi.Models.Student", b =>
                {
                    b.HasOne("ismsapi.Models.BankAccount", "BankAccount")
                        .WithMany("Student")
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.EducateType", "EducateType")
                        .WithMany("Student")
                        .HasForeignKey("EducateTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.Faculty", "Faculty")
                        .WithMany("Student")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.MajorStudent", "MajorStudent")
                        .WithMany("Student")
                        .HasForeignKey("MajorStudentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.RoleGroup", "RoleGroup")
                        .WithMany("Student")
                        .HasForeignKey("RoleGroupId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.StudyStatus", "StudyStatus")
                        .WithMany("Student")
                        .HasForeignKey("StudyStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ismsapi.Models.StudyType", "StudyType")
                        .WithMany("Student")
                        .HasForeignKey("StudyTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
